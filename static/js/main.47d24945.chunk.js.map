{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/CityMap.jsx","components/RadarChart.jsx","components/HeatMap.jsx","components/DashBoard.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CityMap","React","Component","RadarChart","HeatMap","props","drawLegend","vsupScale","colorScale","vsupLegend","vsup","arcmapLegend","scale","size","x","y","vtitle","utitle","d3","selectAll","remove","append","attr","call","colorLegendSvg","linearGradient","style","text","drawHeatmap","data","console","log","start_time","Date","parse","heatdata","time_range","i","curtime","date","datestring","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","dateDisplay","filter","d","index","forEach","intensity","uncertainty","count","parseFloat","medical_i","state","attribute","medical","medical_u","power_i","power","power_u","sewer_and_water_i","sewer_and_water","sewer_and_water_u","roads_and_bridges_i","roads_and_bridges","roads_and_bridges_u","buildings_i","buildings","buildings_u","push","time","time_string","location","parseInt","intensity_total","uncertainty_total","margin","width","height","svg","xScale","range","padding","domain","g","select","yDomain","loc_intensity","Array","from","length","_","map","reduce","sum","cur","descend","sort","a","b","yScale","enter","bandwidth","catch","error","handleOrder","document","getElementById","checked","setState","handleAttribute","handleUncertainty","interpolateIsoRdBu","interpolate","quantization","branching","layers","valueDomain","uncertaintyDomain","quantize","interpolator","end_time","this","class","id","type","name","value","onChange","DashBoard","rowHeight","window","innerWidth","innerHeight","className","layout","w","h","cols","backgroundColor","paddingLeft","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.47d24945.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\n\nclass CityMap extends React.Component {\n    render() {\n        return <div></div>;\n    }\n}\n\nexport default CityMap;","import React, { Component } from 'react';\n\nclass RadarChart extends React.Component {\n    render() {\n        return <div></div>;\n    }\n}\n\nexport default RadarChart;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as d3 from 'd3';\nimport * as vsup from 'vsup';\n\nclass HeatMap extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // initialize color scale\n        var red = \"#b2182b\", yellow = \"#fee090\", blue = \"#abd9e9\";\n        var interpolateIsoRdBu = d3.scaleLinear()\n            .domain([0, 0.5, 1])\n            .range([blue, yellow, red])\n            .interpolate(d3.interpolateLab);\n        var vDom = [1, 10], uDom = [0, 1];\n        var quantization = vsup.quantization().branching(2).layers(4).valueDomain(vDom).uncertaintyDomain(uDom);\n        var vsupScale = vsup.scale().quantize(quantization).range(interpolateIsoRdBu);\n        // var colorScale = d3.scaleLinear()\n        //     .domain([1, 5, 10])\n        //     .range([blue, yellow, red])\n        //     .interpolate(d3.interpolateLab);\n        var colorScale = d3\n            .scaleSequential()\n            .interpolator(d3.interpolateRdYlBu)\n            .domain([10, -5]);\n\n        this.state = {\n            start_time: 0,\n            end_time: 1,\n            descend: true,\n            attribute: {\n                medical: true,\n                power: false,\n                roads_and_bridges: false,\n                sewer_and_water: false,\n                buildings: false\n            },\n            uncertainty: true,\n            vsupScale,\n            colorScale\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"HeatMap did mount...\")\n\n\n\n        this.drawHeatmap(this.state.vsupScale, this.state.colorScale);\n        this.drawLegend(this.state.vsupScale, this.state.colorScale);\n    }\n\n    componentDidUpdate() {\n        console.log(\"HeatMap did update...\")\n        this.drawHeatmap(this.state.vsupScale, this.state.colorScale);\n    }\n\n    drawLegend = (vsupScale, colorScale) => {\n        // vsup legend\n        var vsupLegend = vsup.legend.arcmapLegend();\n        vsupLegend\n            .scale(vsupScale)\n            .size(160)\n            .x(0)\n            .y(0)\n            .vtitle(\"Intensity Reported\")\n            .utitle(\"Uncertainty\");\n\n        d3.select(\"#vsupLegend\").selectAll(\"svg\").remove();\n        let vsupLegendSvg = d3\n            .select(\"#vsupLegend\").append(\"svg\")\n            .attr(\"width\", 300)\n            .attr(\"height\", 300)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(15,40)\");\n        vsupLegendSvg.append(\"g\").call(vsupLegend)\n\n        // color legend\n        d3.select(\"#colorLegend\").selectAll(\"svg\").remove();\n        let colorLegendSvg = d3\n            .select(\"#colorLegend\").append(\"svg\")\n            .attr(\"width\", 180)\n            .attr(\"height\", 60)\n            .append(\"g\")\n\n        var linearGradient = colorLegendSvg.append(\"defs\").append(\"linearGradient\")\n            .attr(\"id\", `linear-gradient`);\n\n        linearGradient\n            .attr(\"x1\", \"0%\")\n            .attr(\"y1\", \"0%\")\n            .attr(\"x2\", \"100%\")\n            .attr(\"y2\", \"0%\");\n\n        //Set the color for the start (0%)\n        linearGradient.append(\"stop\")\n            .attr(\"offset\", \"0%\")\n            .attr(\"stop-color\", colorScale(1));\n\n        linearGradient.append(\"stop\")\n            .attr(\"offset\", \"50%\")\n            .attr(\"stop-color\", colorScale(5));\n\n        //Set the color for the end (100%)\n        linearGradient.append(\"stop\")\n            .attr(\"offset\", \"100%\")\n            .attr(\"stop-color\", colorScale(10));\n\n        colorLegendSvg.append(\"rect\")\n            .attr(\"width\", 160)\n            .attr(\"height\", 20)\n            .style(\"fill\", `url(#linear-gradient)`)\n            .attr(\"x\", 10)\n            .attr(\"y\", 10)\n\n        colorLegendSvg.append(\"text\").text(\"1\").attr(\"x\", 10).attr(\"y\", 45);\n        colorLegendSvg.append(\"text\").text(\"10\").attr(\"x\", 160).attr(\"y\", 45)\n    }\n\n    drawHeatmap = (vsupScale, colorScale) => {\n\n        d3.csv(\"./merge_ui.csv\").then((data) => {\n            console.log(\"rawdata\", data)\n\n            // preprocess data\n            let start_time = Date.parse(\"2020-04-08 6:00:00\")\n            let interval = 30 * 60 * 1000; // 30 min * 60 s * 1000 ms\n            let heatdata = [], time_range = [];\n            for (let i = 0; i < 20; i++) {\n                // fix 20 time intervals\n                let curtime = start_time + i * interval;\n                let date = new Date(curtime);\n                let datestring = date.getFullYear() + \"-\" + (date.getMonth() + 1).toString().padStart(2, '0') + \"-\" + date.getDate().toString().padStart(2, '0') + \" \" + date.getHours().toString().padStart(2, '0') + \":\" + date.getMinutes().toString().padStart(2, '0') + \":\" + date.getSeconds().toString().padStart(2, '0');\n                let dateDisplay = (date.getMonth() + 1).toString() + \".\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes().toString().padStart(2, '0');\n                // console.log(datestring)\n                // console.log(data.filter(d => d.index == datestring))\n                data.filter(d => d.index == datestring).forEach(d => {\n                    let intensity = 0, uncertainty = 0, count = 0;\n                    if (parseFloat(d.medical_i) != -1 && this.state.attribute.medical) {\n                        intensity += parseFloat(d.medical_i);\n                        uncertainty += parseFloat(d.medical_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.power_i) != -1 && this.state.attribute.power) {\n                        intensity += parseFloat(d.power_i);\n                        uncertainty += parseFloat(d.power_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.sewer_and_water_i) != -1 && this.state.attribute.sewer_and_water) {\n                        intensity += parseFloat(d.sewer_and_water_i);\n                        uncertainty += parseFloat(d.sewer_and_water_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.roads_and_bridges_i) != -1 && this.state.attribute.roads_and_bridges) {\n                        intensity += parseFloat(d.roads_and_bridges_i);\n                        uncertainty += parseFloat(d.roads_and_bridges_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.buildings_i) != -1 && this.state.attribute.buildings) {\n                        intensity += parseFloat(d.buildings_i);\n                        uncertainty += parseFloat(d.buildings_u);\n                        count += 1;\n                    }\n\n                    heatdata.push({\n                        time: curtime,\n                        time_string: dateDisplay,\n                        location: parseInt(d.location),\n                        intensity_total: intensity / count,\n                        uncertainty_total: uncertainty / count,\n                        // medical: { intensity: parseFloat(d.medical_i), uncertainty: parseFloat(d.medical_u) },\n                        // power: { intensity: parseFloat(d.power_i), uncertainty: parseFloat(d.power_u) },\n                        // roads_and_bridges: { intensity: parseFloat(d.roads_and_bridges_i), uncertainty: parseFloat(d.roads_and_bridges_u) },\n                        // sewer_and_water: { intensity: parseFloat(d.sewer_and_water_i), uncertainty: parseFloat(d.sewer_and_water_u) },\n                        // buildings: { intensity: parseFloat(d.buildings_i), uncertainty: parseFloat(d.buildings_u) },\n                    })\n                })\n                time_range.push(dateDisplay);\n            }\n            console.log(\"heatdata\", heatdata);\n\n            let margin = { left: 30, right: 10, top: 30, bottom: 10 },\n                width = 1200 - margin.left - margin.right,\n                height = 1000 - margin.top - margin.bottom;\n\n            d3.select(\"#heatmap\").selectAll(\"svg\").remove();\n            let svg = d3\n                .select(\"#heatmap\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            // x scale\n            let xScale = d3.scaleBand().range([0, width]).padding(0.1).domain(time_range);\n            svg.append(\"g\").style(\"font-size\", \"12px\").call(d3.axisTop(xScale)).call(g => {\n                g.select(\".domain\").remove();\n                g.selectAll(\"line\").remove();\n            });\n            // y scale\n            // sort \n            let loc_intensity = Array.from({ length: 19 }, (_, i) => i + 1).map(i => {\n                return {\n                    location: i,\n                    intensity_total: heatdata.filter(d => d.location == i).reduce((sum, cur) => {\n                        if (cur.intensity_total > 0) return sum + cur.intensity_total\n                        else return sum\n                    }, 0)\n                }\n            })\n            console.log(\"location intensity\", loc_intensity)\n            let yDomain;\n            if (this.state.descend) {\n                yDomain = loc_intensity.sort((a, b) => b.intensity_total - a.intensity_total).map(d => d.location)\n            } else {\n                yDomain = loc_intensity.sort((a, b) => a.intensity_total - b.intensity_total).map(d => d.location)\n            }\n            console.log(\"yDomain\", yDomain)\n            let yScale = d3.scaleBand().range([0, height]).domain(yDomain).padding(0.1);\n            svg.append(\"g\").style(\"font-size\", \"14px\").call(d3.axisLeft(yScale)).call(g => {\n                g.select(\".domain\").remove();\n                g.selectAll(\"line\").remove();\n            });\n\n            // color scales\n            // let colorScale = d3.scaleSequential().interpolator(d3.interpolateRdBu).domain([1, 10]);\n\n            svg.selectAll()\n                .data(heatdata)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\", (d) => xScale(d.time_string))\n                .attr(\"y\", (d) => yScale(d.location))\n                .attr(\"width\", xScale.bandwidth())\n                .attr(\"height\", yScale.bandwidth())\n                .style(\"fill\", (d) => {\n                    if (this.state.uncertainty) return (d.intensity_total > 0) ? vsupScale(d.intensity_total, d.uncertainty_total) : \"white\";\n                    else return (d.intensity_total > 0) ? colorScale(d.intensity_total) : \"white\";\n                })\n\n        }).catch(function (error) {\n            // handle error   \n            console.log('error in loading heatmap csv!')\n        })\n\n\n    }\n\n    handleOrder = () => {\n        console.log(\"handle order\")\n        let descend = document.getElementById(\"descendingRadio\").checked;\n        this.setState({ descend });\n    }\n\n    handleAttribute = () => {\n        console.log(\"handle attribute\")\n        let medical = document.getElementById(\"medicalCheck\").checked;\n        let power = document.getElementById(\"powerCheck\").checked;\n        let roads_and_bridges = document.getElementById(\"roads_and_bridgesCheck\").checked;\n        let sewer_and_water = document.getElementById(\"sewer_and_waterCheck\").checked;\n        let buildings = document.getElementById(\"buildingsCheck\").checked;\n        this.setState({\n            attribute: {\n                medical,\n                power,\n                roads_and_bridges,\n                sewer_and_water,\n                buildings\n            }\n        });\n    }\n\n    handleUncertainty = () => {\n        console.log(\"handle uncertainty\")\n        let uncertainty = document.getElementById(\"uncertaintyRadio\").checked;\n        this.setState({ uncertainty });\n    }\n\n    render() {\n        return <div class=\"row\">\n            <div class=\"col-10\">\n                <p>start time: {this.state.start_time}</p>\n                <div id=\"heatmap\" />\n            </div>\n            <div class=\"col-2\">\n                <span>Sort by:</span><br />\n                <input type=\"radio\" name=\"orderRadio\" id=\"ascendingRadio\" value=\"ascending\" onChange={this.handleOrder} /> Ascending <br />\n                <input type=\"radio\" name=\"orderRadio\" id=\"descendingRadio\" value=\"descending\" onChange={this.handleOrder} /> Descending\n                <br />\n                <br />\n                <span>Selected attribute:</span><br />\n                <input type=\"checkbox\" id=\"medicalCheck\" value=\"medical\" onChange={this.handleAttribute} /> Medical <br />\n                <input type=\"checkbox\" id=\"powerCheck\" value=\"power\" onChange={this.handleAttribute} /> Power<br />\n                <input type=\"checkbox\" id=\"roads_and_bridgesCheck\" value=\"roads_and_bridges\" onChange={this.handleAttribute} /> Roads and Bridges<br />\n                <input type=\"checkbox\" id=\"sewer_and_waterCheck\" value=\"sewer_and_water\" onChange={this.handleAttribute} /> Sewer and Water<br />\n                <input type=\"checkbox\" id=\"buildingsCheck\" value=\"buildings\" onChange={this.handleAttribute} /> Buildings\n                <br />\n                <br />\n                <span>w/o uncertainty:</span><br />\n                <input type=\"radio\" name=\"uncertaintyRadio\" id=\"noUncertaintyRadio\" value=\"noUncertainty\" onChange={this.handleUncertainty} /> Damage reported <br />\n                <div id=\"colorLegend\"></div>\n                <input type=\"radio\" name=\"uncertaintyRadio\" id=\"uncertaintyRadio\" value=\"uncertainty\" onChange={this.handleUncertainty} /> Damage reported + Uncertainty\n                <br />\n                <br />\n                <div id=\"vsupLegend\"></div>\n            </div>\n        </div>;\n    }\n}\n\nexport default HeatMap;","import React, { Component } from 'react';\nimport GridLayout from 'react-grid-layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CityMap from './CityMap';\nimport RadarChart from './RadarChart';\nimport HeatMap from './HeatMap';\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        const layout = [\n            { i: 'a', x: 0, y: 0, w: 6, h: 9 },\n            { i: 'b', x: 6, y: 0, w: 6, h: 9 },\n            { i: 'c', x: 0, y: 9, w: 12, h: 4 },\n            { i: 'd', x: 0, y: 13, w: 12, h: 4 },\n            { i: 'e', x: 0, y: 17, w: 12, h: 27 },\n        ];\n        const rowHeight = 40;\n        const { innerWidth: width, innerHeight: height } = window;\n\n        return (<div>\n            <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={rowHeight} margin={[5, 1]} width={width}>\n                <div key=\"a\">\n                    <div class=\"card\" style={{ height: 9 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>City Map</p>\n                        <CityMap></CityMap>\n                    </div>\n                </div>\n                <div key=\"b\">\n                    <div class=\"card\" style={{ height: 9 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Radar Chart</p>\n                        <RadarChart></RadarChart>\n                    </div>\n                </div>\n                <div key=\"c\">\n                    <div class=\"card\" style={{ height: 4 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}># of Reports</p>\n                    </div>\n                </div>\n                <div key=\"d\">\n                    <div class=\"card\" style={{ height: 4 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Shaking Intensity</p>\n                    </div>\n                </div>\n                <div key=\"e\">\n                    <div class=\"card\" style={{ height: 27 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Heatmap</p>\n                        <HeatMap></HeatMap>\n                    </div>\n                </div>\n            </GridLayout>\n        </div>);\n    }\n}\n\nexport default DashBoard;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DashBoard from \"./components/DashBoard\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DashBoard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}