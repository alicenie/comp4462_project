{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/CityMap.jsx","components/HeatMap.jsx","components/LineChart.jsx","components/DashBoard.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CityMap","props","priorityColor","obj","priorityData","d3","domain","range","colors","properties","Id","drawCityMap","geoData","console","log","priorityPerArea","margin","width","height","selectAll","remove","svg","append","attr","projection","reflectY","fitSize","path","data","features","enter","style","d","on","event","this","selectedRegion","Nbrhood","onSelectRegion","centroid","text","toString","catch","error","id","React","Component","HeatMap","drawLegend","vsupScale","colorScale","vsupLegend","vsup","arcmapLegend","scale","size","x","y","vtitle","utitle","call","colorLegendSvg","linearGradient","drawHeatmap","start_time","Date","parse","heatdata","time_range","i","curtime","date","datestring","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","dateDisplay","filter","index","forEach","intensity","uncertainty","count","parseFloat","medical_i","state","attribute","medical","medical_u","power_i","power","power_u","sewer_and_water_i","sewer_and_water","sewer_and_water_u","roads_and_bridges_i","roads_and_bridges","roads_and_bridges_u","buildings_i","buildings","buildings_u","push","time","time_string","location","parseInt","intensity_total","uncertainty_total","xScale","padding","g","select","yDomain","loc_intensity","Array","from","length","_","map","reduce","sum","cur","descend","sort","a","b","yScale","bandwidth","handleOrder","document","getElementById","checked","setState","handleAttribute","handleUncertainty","interpolateIsoRdBu","interpolate","quantization","branching","layers","valueDomain","uncertaintyDomain","quantize","interpolator","end_time","class","type","name","value","onChange","LineChart","d3ParseTime","handleShakeData","rawData","filterByValidShakeIntensity","record","shake_intensity","intensityWithTime","val","moment","format","groupByTime","groupBy","meanIntensity","records","meanBy","handleReportData","numReports","num","drawLineChart","drawShakeLineChart","drawReportLineChart","timeUpperBound","shakeIntensityData","shakeSvg","xRange","yRange","axisTimeFormat","line","tickFormat","focus","startTime","focusText","html","Math","round","bisect","left","timeSpan","getTime","interval","x0","invert","selectedData","num_report","DashBoard","handleSelectRegion","window","innerWidth","innerHeight","className","layout","w","h","cols","rowHeight","backgroundColor","paddingLeft","marginLeft","marginTop","captions","meta","color","options","captionProps","textAnchor","fontSize","fontFamily","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd0eb224.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass CityMap extends React.Component {\n    constructor(props) {\n        super(props)\n        // this.state = { selected_location: 0 }\n    }\n\n    componentDidMount() {\n        this.drawCityMap();\n    }\n\n    priorityColor = (obj, priorityData) => {\n        const colors = d3.scaleLinear()\n            .domain([10, 100])\n            .range([\"PeachPuff\", \"FireBrick\"]);\n\n        return colors(priorityData[obj.properties.Id - 1])\n    }\n\n    drawCityMap = () => {\n        const geojsonLink = \"https://raw.githubusercontent.com/huantingwei/comp4462/main/StHimark.geojson\";\n        d3.json(geojsonLink).then((geoData) => {\n            console.log(\"geoData\", geoData)\n\n            const priorityPerArea = [10, 20, 50, 100, 20, 15, 25, 35, 50, 70, 85, 25, 50, 70, 85, 25, 50, 70, 10]\n\n            let margin = { left: 10, right: 10, top: 5, bottom: 10 },\n                width = 700 - margin.left - margin.right,\n                height = 370 - margin.top - margin.bottom;\n\n            d3.select(\"#citymap\").selectAll(\"svg\").remove();\n            let svg = d3\n                .select(\"#citymap\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            const projection = d3.geoIdentity().reflectY(true).fitSize([width, height], geoData)\n            const path = d3.geoPath(projection);\n\n            svg.selectAll(\"path\")\n                .data(geoData.features)\n                .enter()\n                .append(\"path\")\n                .attr(\"d\", path)\n                .style(\"stroke\", \"#fff\")\n                .style(\"fill\", (d) => this.priorityColor(d, priorityPerArea))\n                .attr(\"class\", \"areas\")\n                .on(\"mouseover\", function (event, d) {\n                    d3.select(this)\n                        .attr(\"opacity\", 0.5)\n                })\n                .on(\"mouseout\", function (event, d) {\n                    d3.select(this)\n                        .attr(\"opacity\", 1)\n                })\n                .on(\"click\", (event, d) => {\n                    let selectedRegion = [d.properties.Id, d.properties.Nbrhood]\n                    this.props.onSelectRegion(selectedRegion)\n                    // console.log(\"selected region: \", d)\n                })\n\n            svg.selectAll(\".labels\")\n                .data(geoData.features)\n                .enter().append(\"text\")\n                .attr(\"class\", \"labels\")\n                .attr(\"x\", function (d) {\n                    return path.centroid(d)[0];\n                })\n                .attr(\"y\", function (d) {\n                    return path.centroid(d)[1];\n                })\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"font-size\", \"10px\")\n                .text((d) => d.properties.Nbrhood.toString())\n\n        }).catch(function (error) {\n            // handle error   \n            console.log('error in loading geojson!')\n        })\n    }\n    render() {\n        return <div id=\"citymap\"></div>;\n    }\n}\n\nexport default CityMap;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as d3 from 'd3';\nimport * as vsup from 'vsup';\n\nconst loc_name = {\n\n}\nclass HeatMap extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // initialize color scale\n        var red = \"#b2182b\", yellow = \"#fee090\", blue = \"#abd9e9\";\n        var interpolateIsoRdBu = d3.scaleLinear()\n            .domain([0, 0.5, 1])\n            .range([blue, yellow, red])\n            .interpolate(d3.interpolateLab);\n        var vDom = [1, 10], uDom = [0, 1];\n        var quantization = vsup.quantization().branching(2).layers(4).valueDomain(vDom).uncertaintyDomain(uDom);\n        var vsupScale = vsup.scale().quantize(quantization).range(interpolateIsoRdBu);\n\n        var colorScale = d3\n            .scaleSequential()\n            .interpolator(d3.interpolateRdYlBu)\n            .domain([10, -5]);\n\n        this.state = {\n            start_time: 0,\n            end_time: 1,\n            descend: true,\n            attribute: {\n                medical: true,\n                power: false,\n                roads_and_bridges: false,\n                sewer_and_water: false,\n                buildings: false\n            },\n            uncertainty: true,\n            vsupScale,\n            colorScale\n        }\n    }\n\n\n\n    componentDidMount() {\n        console.log(\"HeatMap did mount...\")\n        this.drawHeatmap(this.state.vsupScale, this.state.colorScale);\n        this.drawLegend(this.state.vsupScale, this.state.colorScale);\n    }\n\n    componentDidUpdate() {\n        console.log(\"HeatMap did update...\")\n        this.drawHeatmap(this.state.vsupScale, this.state.colorScale);\n    }\n\n    drawLegend = (vsupScale, colorScale) => {\n        // vsup legend\n        var vsupLegend = vsup.legend.arcmapLegend();\n        vsupLegend\n            .scale(vsupScale)\n            .size(160)\n            .x(0)\n            .y(0)\n            .vtitle(\"Intensity Reported\")\n            .utitle(\"Uncertainty\");\n\n        d3.select(\"#vsupLegend\").selectAll(\"svg\").remove();\n        let vsupLegendSvg = d3\n            .select(\"#vsupLegend\").append(\"svg\")\n            .attr(\"width\", 300)\n            .attr(\"height\", 300)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(15,40)\");\n        vsupLegendSvg.append(\"g\").call(vsupLegend)\n\n        // color legend\n        d3.select(\"#colorLegend\").selectAll(\"svg\").remove();\n        let colorLegendSvg = d3\n            .select(\"#colorLegend\").append(\"svg\")\n            .attr(\"width\", 180)\n            .attr(\"height\", 60)\n            .append(\"g\")\n\n        var linearGradient = colorLegendSvg.append(\"defs\").append(\"linearGradient\")\n            .attr(\"id\", `linear-gradient`);\n\n        linearGradient\n            .attr(\"x1\", \"0%\")\n            .attr(\"y1\", \"0%\")\n            .attr(\"x2\", \"100%\")\n            .attr(\"y2\", \"0%\");\n\n        //Set the color for the start (0%)\n        linearGradient.append(\"stop\")\n            .attr(\"offset\", \"0%\")\n            .attr(\"stop-color\", colorScale(1));\n\n        linearGradient.append(\"stop\")\n            .attr(\"offset\", \"50%\")\n            .attr(\"stop-color\", colorScale(5));\n\n        //Set the color for the end (100%)\n        linearGradient.append(\"stop\")\n            .attr(\"offset\", \"100%\")\n            .attr(\"stop-color\", colorScale(10));\n\n        colorLegendSvg.append(\"rect\")\n            .attr(\"width\", 160)\n            .attr(\"height\", 20)\n            .style(\"fill\", `url(#linear-gradient)`)\n            .attr(\"x\", 10)\n            .attr(\"y\", 10)\n\n        colorLegendSvg.append(\"text\").text(\"1\").attr(\"x\", 10).attr(\"y\", 45);\n        colorLegendSvg.append(\"text\").text(\"10\").attr(\"x\", 160).attr(\"y\", 45)\n    }\n\n    drawHeatmap = (vsupScale, colorScale) => {\n\n        d3.csv(\"./merge_ui_std.csv\").then((data) => {\n            console.log(\"rawdata\", data)\n\n            // preprocess data\n            let start_time = Date.parse(\"2020-04-08 6:00:00\")\n            let interval = 30 * 60 * 1000; // 30 min * 60 s * 1000 ms\n            let heatdata = [], time_range = [];\n            // fix num of time intervals\n            let numOfInterval = 15\n            for (let i = 0; i < numOfInterval; i++) {\n\n                let curtime = start_time + i * interval;\n                let date = new Date(curtime);\n                let datestring = date.getFullYear() + \"-\" + (date.getMonth() + 1).toString().padStart(2, '0') + \"-\" + date.getDate().toString().padStart(2, '0') + \" \" + date.getHours().toString().padStart(2, '0') + \":\" + date.getMinutes().toString().padStart(2, '0') + \":\" + date.getSeconds().toString().padStart(2, '0');\n                let dateDisplay = (date.getMonth() + 1).toString() + \".\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes().toString().padStart(2, '0');\n                // console.log(datestring)\n                // console.log(data.filter(d => d.index == datestring))\n                data.filter(d => d.index == datestring).forEach(d => {\n                    let intensity = 0, uncertainty = 0, count = 0;\n                    if (parseFloat(d.medical_i) != -1 && this.state.attribute.medical) {\n                        intensity += parseFloat(d.medical_i);\n                        uncertainty += parseFloat(d.medical_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.power_i) != -1 && this.state.attribute.power) {\n                        intensity += parseFloat(d.power_i);\n                        uncertainty += parseFloat(d.power_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.sewer_and_water_i) != -1 && this.state.attribute.sewer_and_water) {\n                        intensity += parseFloat(d.sewer_and_water_i);\n                        uncertainty += parseFloat(d.sewer_and_water_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.roads_and_bridges_i) != -1 && this.state.attribute.roads_and_bridges) {\n                        intensity += parseFloat(d.roads_and_bridges_i);\n                        uncertainty += parseFloat(d.roads_and_bridges_u);\n                        count += 1;\n                    }\n                    if (parseFloat(d.buildings_i) != -1 && this.state.attribute.buildings) {\n                        intensity += parseFloat(d.buildings_i);\n                        uncertainty += parseFloat(d.buildings_u);\n                        count += 1;\n                    }\n\n                    heatdata.push({\n                        time: curtime,\n                        time_string: dateDisplay,\n                        location: parseInt(d.location),\n                        intensity_total: intensity / count,\n                        uncertainty_total: uncertainty / count,\n                        // medical: { intensity: parseFloat(d.medical_i), uncertainty: parseFloat(d.medical_u) },\n                        // power: { intensity: parseFloat(d.power_i), uncertainty: parseFloat(d.power_u) },\n                        // roads_and_bridges: { intensity: parseFloat(d.roads_and_bridges_i), uncertainty: parseFloat(d.roads_and_bridges_u) },\n                        // sewer_and_water: { intensity: parseFloat(d.sewer_and_water_i), uncertainty: parseFloat(d.sewer_and_water_u) },\n                        // buildings: { intensity: parseFloat(d.buildings_i), uncertainty: parseFloat(d.buildings_u) },\n                    })\n                })\n                time_range.push(dateDisplay);\n            }\n            console.log(\"heatdata\", heatdata);\n\n            let margin = { left: 30, right: 10, top: 30, bottom: 10 },\n                width = 1200 - margin.left - margin.right,\n                height = 1000 - margin.top - margin.bottom;\n\n            d3.select(\"#heatmap\").selectAll(\"svg\").remove();\n            let svg = d3\n                .select(\"#heatmap\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            // x scale\n            let xScale = d3.scaleBand().range([0, width]).padding(0.1).domain(time_range);\n            svg.append(\"g\").style(\"font-size\", \"12px\").call(d3.axisTop(xScale)).call(g => {\n                g.select(\".domain\").remove();\n                g.selectAll(\"line\").remove();\n            });\n            // y scale\n            // sort \n            let loc_intensity = Array.from({ length: 19 }, (_, i) => i + 1).map(i => {\n                return {\n                    location: i,\n                    intensity_total: heatdata.filter(d => d.location == i).reduce((sum, cur) => {\n                        if (cur.intensity_total > 0) return sum + cur.intensity_total\n                        else return sum\n                    }, 0)\n                }\n            })\n            console.log(\"location intensity\", loc_intensity)\n            let yDomain;\n            if (this.state.descend) {\n                yDomain = loc_intensity.sort((a, b) => b.intensity_total - a.intensity_total).map(d => d.location)\n            } else {\n                yDomain = loc_intensity.sort((a, b) => a.intensity_total - b.intensity_total).map(d => d.location)\n            }\n            console.log(\"yDomain\", yDomain)\n            let yScale = d3.scaleBand().range([0, height]).domain(yDomain).padding(0.1);\n            svg.append(\"g\").style(\"font-size\", \"14px\").call(d3.axisLeft(yScale)).call(g => {\n                g.select(\".domain\").remove();\n                g.selectAll(\"line\").remove();\n            });\n\n            // color scales\n            // let colorScale = d3.scaleSequential().interpolator(d3.interpolateRdBu).domain([1, 10]);\n\n            svg.selectAll()\n                .data(heatdata)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\", (d) => xScale(d.time_string))\n                .attr(\"y\", (d) => yScale(d.location))\n                .attr(\"width\", xScale.bandwidth())\n                .attr(\"height\", yScale.bandwidth())\n                .style(\"fill\", (d) => {\n                    if (this.state.uncertainty) return (d.intensity_total > 0) ? vsupScale(d.intensity_total, d.uncertainty_total) : \"white\";\n                    else return (d.intensity_total > 0) ? colorScale(d.intensity_total) : \"white\";\n                })\n\n        }).catch(function (error) {\n            // handle error   \n            console.log('error in loading heatmap csv!')\n        })\n\n\n    }\n\n    handleOrder = () => {\n        console.log(\"handle order\")\n        let descend = document.getElementById(\"descendingRadio\").checked;\n        this.setState({ descend });\n    }\n\n    handleAttribute = () => {\n        console.log(\"handle attribute\")\n        let medical = document.getElementById(\"medicalCheck\").checked;\n        let power = document.getElementById(\"powerCheck\").checked;\n        let roads_and_bridges = document.getElementById(\"roads_and_bridgesCheck\").checked;\n        let sewer_and_water = document.getElementById(\"sewer_and_waterCheck\").checked;\n        let buildings = document.getElementById(\"buildingsCheck\").checked;\n        this.setState({\n            attribute: {\n                medical,\n                power,\n                roads_and_bridges,\n                sewer_and_water,\n                buildings\n            }\n        });\n    }\n\n    handleUncertainty = () => {\n        console.log(\"handle uncertainty\")\n        let uncertainty = document.getElementById(\"uncertaintyRadio\").checked;\n        this.setState({ uncertainty });\n    }\n\n    render() {\n        return <div class=\"row\">\n            <div class=\"col-10\">\n                <p>start time: {this.state.start_time}</p>\n                <div id=\"heatmap\" />\n            </div>\n            <div class=\"col-2\">\n                <span>Sort by:</span><br />\n                <input type=\"radio\" name=\"orderRadio\" id=\"ascendingRadio\" value=\"ascending\" onChange={this.handleOrder} /> Ascending <br />\n                <input type=\"radio\" name=\"orderRadio\" id=\"descendingRadio\" value=\"descending\" onChange={this.handleOrder} /> Descending\n                <br />\n                <br />\n                <span>Selected attribute:</span><br />\n                <input type=\"checkbox\" id=\"medicalCheck\" value=\"medical\" onChange={this.handleAttribute} /> Medical <br />\n                <input type=\"checkbox\" id=\"powerCheck\" value=\"power\" onChange={this.handleAttribute} /> Power<br />\n                <input type=\"checkbox\" id=\"roads_and_bridgesCheck\" value=\"roads_and_bridges\" onChange={this.handleAttribute} /> Roads and Bridges<br />\n                <input type=\"checkbox\" id=\"sewer_and_waterCheck\" value=\"sewer_and_water\" onChange={this.handleAttribute} /> Sewer and Water<br />\n                <input type=\"checkbox\" id=\"buildingsCheck\" value=\"buildings\" onChange={this.handleAttribute} /> Buildings\n                <br />\n                <br />\n                <span>w/o uncertainty:</span><br />\n                <input type=\"radio\" name=\"uncertaintyRadio\" id=\"noUncertaintyRadio\" value=\"noUncertainty\" onChange={this.handleUncertainty} /> Damage reported <br />\n                <div id=\"colorLegend\"></div>\n                <input type=\"radio\" name=\"uncertaintyRadio\" id=\"uncertaintyRadio\" value=\"uncertainty\" onChange={this.handleUncertainty} /> Damage reported + Uncertainty\n                <br />\n                <br />\n                <div id=\"vsupLegend\"></div>\n            </div>\n        </div>;\n    }\n}\n\nexport default HeatMap;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport _ from \"lodash\";\nimport moment from 'moment';\n\nclass LineChart extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            startTime: \"2020-04-08 17:50:00\",\n            intensity: 0,\n            num_report: 0,\n            interval: 600\n        }\n    }\n\n    componentDidMount() {\n        this.drawLineChart();\n    }\n\n    componentDidUpdate() {\n        this.drawLineChart();\n    }\n\n    d3ParseTime = d3.timeParse('%Y-%m-%d %H:%M');\n\n    handleShakeData = (rawData) => {\n        // remove those with shake_intensity = ''\n        let filterByValidShakeIntensity = rawData.filter(record => record.shake_intensity !== '')\n        let intensityWithTime = _.map(filterByValidShakeIntensity, (val) => {\n            let intensity = parseInt(val.shake_intensity, 10)\n            return {\n                shake_intensity: intensity < 0 ? -intensity : intensity,\n                time: moment(val.time).format('YYYY-MM-DD hh:mm'),\n            }\n        })\n        let groupByTime = _.groupBy(intensityWithTime, val => val.time)\n        let meanIntensity = _.map(groupByTime, (records, time) => {\n            return {\n                shake_intensity: _.meanBy(records, record => record.shake_intensity),\n                time: time,\n            }\n        })\n        let shakeIntensityLineChartData = _.map(meanIntensity, (d) => {\n            return {\n                shake_intensity: d.shake_intensity,\n                time: this.d3ParseTime(d.time),\n                // random: Math.floor(Math.random() * 10)\n            }\n        }).sort((a, b) => a.time - b.time)\n        return shakeIntensityLineChartData\n    }\n\n    handleReportData = (rawData) => {\n        let groupByTime = _.groupBy(rawData, val => val.time)\n        let numReports = _.map(groupByTime, (records, time) => {\n            return {\n                num: records.length,\n                time: time,\n            }\n        })\n        let numReportsLineChartData = _.map(numReports, (d) => {\n            return {\n                num: d.num,\n                time: this.d3ParseTime(moment(d.time).format('YYYY-MM-DD hh:mm')),\n                // random: Math.floor(Math.random() * 10)\n            }\n        }).sort((a, b) => a.time - b.time)\n        return numReportsLineChartData\n    }\n\n    drawLineChart = () => {\n        d3.csv('./mc1-reports-data.csv').then((rawData) => {\n            this.drawShakeLineChart(rawData);\n            this.drawReportLineChart(rawData);\n\n        }).catch(function (error) {\n            // handle error   \n            console.log('error in loading linechart csv!')\n        })\n    }\n\n    drawShakeLineChart = (rawData) => {\n        // shake intensity line chart\n        let timeUpperBound = this.d3ParseTime('2020-04-10 18:00');\n        let shakeIntensityData = this.handleShakeData(rawData);\n        console.log(\"shake intensity line chart data\", shakeIntensityData)\n\n        let margin = { left: 50, top: 10, right: 20, bottom: 30 },\n            width = 1400 - margin.left - margin.right,\n            height = 220 - margin.top - margin.bottom;\n\n        d3.select(\"#shakeLineChart\").selectAll(\"svg\").remove();\n        let shakeSvg = d3\n            .select(\"#shakeLineChart\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        let xRange = d3.extent(_.map(shakeIntensityData, d => d.time));\n        let yRange = [0, d3.max(shakeIntensityData, d => d.shake_intensity)];\n\n        const axisTimeFormat = d3.timeFormat('%m-%d %H:%M');\n\n        const yLabel = \"Shake Intensity\";\n        const xLabel = \"Time\";\n\n        let xScale = d3.scaleTime()\n            .range([margin.left, width - margin.right])\n            .domain(xRange)\n\n        let yScale = d3.scaleLinear()\n            .range([height - margin.bottom, margin.top])\n            .domain(yRange)\n\n        let line = d3.line()\n            .x(d => xScale(d.time))\n            .y(d => yScale(d.shake_intensity))\n\n        shakeSvg.append('g')\n            .call(\n                d3.axisBottom(xScale)\n                    .tickFormat(axisTimeFormat)\n            )\n            .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n            .call(g => g.append(\"text\")\n                .attr(\"x\", width - 1.5 * margin.right)\n                .attr(\"y\", -0.5 * margin.bottom)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"start\")\n                .text(xLabel));\n\n        shakeSvg.append('g')\n            .call(d3.axisLeft(yScale))\n            .attr('transform', `translate(${margin.left},0)`)\n            .call(g => g.append(\"text\")\n                .attr(\"x\", -margin.left)\n                .attr(\"y\", margin.top - 5)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"start\")\n                .text(yLabel)\n                .attr(\"transform\", \"translate(-50,80), rotate(-90)\")\n                .style(\"font-size\", 14));\n\n        shakeSvg.append('g')\n            .selectAll('path')\n            .data([shakeIntensityData])\n            .enter()\n            .append('path')\n            .attr('d', d => line(d))\n            .attr('fill', 'none')\n            .attr('stroke', 'SteelBlue')\n\n        const focus = shakeSvg\n            .append('g')\n            .append('circle')\n            .style(\"fill\", \"none\")\n            .attr(\"stroke\", \"orange\")\n            .attr(\"r\", 8.5)\n            .attr(\"cx\", xScale(this.state.startTime))\n            .attr(\"cy\", yScale(this.state.intensity))\n            .style(\"opacity\", 0)\n\n        const focusText = shakeSvg\n            .append('g')\n            .append('text')\n            .style(\"opacity\", 0)\n            .style('font-size', '10px')\n            .attr(\"text-anchor\", \"left\")\n            .attr(\"alignment-baseline\", \"middle\")\n            .html(\"time:\" + moment(this.state.startTime).format('MM-DD HH:mm') + \" | \" + \"SI:\" + Math.round(this.state.intensity) / 100)\n            .attr(\"x\", xScale(this.state.startTime) + 15)\n            .attr(\"y\", yScale(this.state.intensity));\n\n        const bisect = d3.bisector(function (d) { return d.time; }).left;\n\n        let verticalLine = shakeSvg\n            .append(\"line\")\n            .attr(\"x1\", xScale(this.state.startTime))\n            .attr(\"y1\", 0)\n            .attr(\"x2\", xScale(this.state.startTime))\n            .attr(\"y2\", height - margin.top)\n            .style(\"stroke-width\", 2)\n            .style(\"stroke\", \"orange\")\n            .style(\"fill\", \"none\");\n\n        let timeSpan = shakeSvg\n            .append('rect')\n            .style(\"fill\", \"orange\")\n            .style(\"pointer-events\", \"all\")\n            .attr('width', xScale(\n                new Date(xRange[0].getTime() + this.state.interval * 60000)\n            ))\n            .attr('height', height - margin.top)\n            .attr('x', xScale(this.state.startTime))\n            .style(\"opacity\", 0.4)\n\n        shakeSvg\n            .append('rect')\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .attr('width', width)\n            .attr('height', height)\n            .on('mouseover', () => {\n                focus.style(\"opacity\", 1)\n                focusText.style(\"opacity\", 1)\n                timeSpan.style(\"opacity\", 0.4)\n            })\n            .on('mousemove', (event) => {\n                // recover coordinate we need\n                let x0 = xScale.invert(d3.pointer(event)[0]);\n                console.log(\"x0\", x0)\n                let i = bisect(shakeIntensityData, x0, 1);\n                let selectedData = shakeIntensityData[i];\n                console.log(\"selected data\", i)\n\n                if (selectedData.time < timeUpperBound) {\n                    let startTime = selectedData.time;\n                    let intensity = selectedData.shake_intensity;\n                    this.setState({ startTime, intensity })\n                }\n            })\n            .on('mouseout', () => {\n                // focus.style(\"opacity\", 0)\n                focusText.style(\"opacity\", 0)\n                // timeSpan.style(\"opacity\", 0)\n            });\n    }\n\n    drawReportLineChart = (rawData) => {\n        const data = this.handleReportData(rawData);\n        let timeUpperBound = this.d3ParseTime('2020-04-10 18:00');\n\n        let margin = { left: 50, top: 10, right: 20, bottom: 30 },\n            width = 1400 - margin.left - margin.right,\n            height = 220 - margin.top - margin.bottom;\n\n        d3.select(\"#reportLineChart\").selectAll(\"svg\").remove();\n        let svg = d3\n            .select(\"#reportLineChart\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const axisTimeFormat = d3.timeFormat('%m-%d %H:%M');\n\n        const yLabel = \"Num of Reports\";\n        const xLabel = \"Time\";\n\n        const xRange = d3.extent(_.map(data, d => d.time));\n        const yRange = [0, d3.max(data, d => d.num)];\n\n        const xScale = d3.scaleTime()\n            .range([margin.left, width - margin.right])\n            .domain(xRange)\n\n        const yScale = d3.scaleLinear()\n            .range([height - margin.bottom, margin.top])\n            .domain(yRange)\n\n        const line = d3.line()\n            .x(d => xScale(d.time))\n            .y(d => yScale(d.num))\n\n        svg.append('g')\n            .call(\n                d3.axisBottom(xScale)\n                    .tickFormat(axisTimeFormat)\n            )\n            .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n            .call(g => g.append(\"text\")\n                .attr(\"x\", width - 1.5 * margin.right)\n                .attr(\"y\", -0.5 * margin.bottom)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"start\")\n                .text(xLabel));\n\n        svg.append('g')\n            .call(d3.axisLeft(yScale))\n            .attr('transform', `translate(${margin.left},0)`)\n            .call(g => g.append(\"text\")\n                .attr(\"x\", -margin.left)\n                .attr(\"y\", margin.top - 5)\n                .attr(\"fill\", \"currentColor\")\n                .attr(\"text-anchor\", \"start\")\n                .text(yLabel)\n                .attr(\"transform\", \"translate(-50,80), rotate(-90)\")\n                .style(\"font-size\", 14));\n\n        svg.append('g')\n            .selectAll('path')\n            .data([data])\n            .enter()\n            .append('path')\n            .attr('d', d => line(d))\n            .attr('fill', 'none')\n            .attr('stroke', 'SteelBlue')\n\n        const focus = svg\n            .append('g')\n            .append('circle')\n            .style(\"fill\", \"none\")\n            .attr(\"stroke\", \"orange\")\n            .attr(\"r\", 8.5)\n            .attr(\"cx\", xScale(this.state.startTime))\n            .attr(\"cy\", yScale(this.state.num_report))\n            .style(\"opacity\", 0)\n\n        const focusText = svg\n            .append('g')\n            .append('text')\n            .style(\"opacity\", 0)\n            .style('font-size', '10px')\n            .attr(\"text-anchor\", \"left\")\n            .attr(\"alignment-baseline\", \"middle\")\n            .html(\"time:\" + moment(this.state.startTime).format('MM-DD HH:mm') + \" | \" + \"#:\" + Math.round(this.state.num_report) / 100)\n            .attr(\"x\", xScale(this.state.startTime) + 15)\n            .attr(\"y\", yScale(this.state.num_report));\n\n        const bisect = d3.bisector(function (d) { return d.time; }).left;\n\n        const verticalLine = svg\n            .append(\"line\")\n            .attr(\"x1\", xScale(this.state.startTime))\n            .attr(\"y1\", 0)\n            .attr(\"x2\", xScale(this.state.startTime))\n            .attr(\"y2\", height - margin.top)\n            .style(\"stroke-width\", 2)\n            .style(\"stroke\", \"orange\")\n            .style(\"fill\", \"none\");\n\n        const timeSpan = svg\n            .append('rect')\n            .style(\"fill\", \"orange\")\n            .style(\"pointer-events\", \"all\")\n            .attr('width', xScale(\n                new Date(xRange[0].getTime() + this.state.interval * 60000)\n            ))\n            .attr('height', height - margin.top)\n            .attr('x', xScale(this.state.startTime))\n            .style(\"opacity\", 0.4)\n\n        function mouseover() {\n            focus.style(\"opacity\", 1)\n            focusText.style(\"opacity\", 1)\n            timeSpan.style(\"opacity\", 0.4)\n        }\n\n        function mouseout() {\n            // focus.style(\"opacity\", 0)\n            focusText.style(\"opacity\", 0)\n            // timeSpan.style(\"opacity\", 0)\n        }\n\n        svg\n            .append('rect')\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .attr('width', width)\n            .attr('height', height)\n            .on('mouseover', mouseover)\n            .on('mousemove', (event) => {\n                {\n                    let x0 = xScale.invert(d3.pointer(event)[0]);\n                    let i = bisect(data, x0, 1);\n                    let selectedData = data[i];\n\n                    if (selectedData.time < timeUpperBound) {\n                        let startTime = selectedData.time;\n                        let num_report = selectedData.num;\n                        this.setState({ startTime, num_report })\n                    }\n                }\n            })\n            .on('mouseout', mouseout);\n    }\n\n    render() {\n        return <div>\n            <div id=\"shakeLineChart\"></div>\n            <div id=\"reportLineChart\"></div>\n        </div>;\n    }\n}\n\nexport default LineChart;","import React, { Component } from 'react';\nimport GridLayout from 'react-grid-layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CityMap from './CityMap';\n// import RadarChart from './RadarChart';\nimport HeatMap from './HeatMap';\nimport LineChart from './LineChart';\nimport RadarChart from 'react-svg-radar-chart';\nimport 'react-svg-radar-chart/build/css/index.css';\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedRegion: [0, \"\"]\n        }\n    }\n\n    handleSelectRegion = (selectedRegion) => {\n        console.log(\"select region \", selectedRegion)\n        this.setState({ selectedRegion })\n    }\n\n\n    render() {\n        const layout = [\n            { i: 'a', x: 0, y: 0, w: 6, h: 9 },\n            { i: 'b', x: 6, y: 0, w: 6, h: 9 },\n            { i: 'c', x: 0, y: 9, w: 12, h: 10 },\n            // { i: 'd', x: 0, y: 14, w: 12, h: 5 },\n            { i: 'e', x: 0, y: 18, w: 12, h: 27 },\n        ];\n        const rowHeight = 45;\n        const { innerWidth: width, innerHeight: height } = window;\n\n        return (<div>\n            <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={rowHeight} margin={[5, 1]} width={width}>\n                <div key=\"a\">\n                    <div class=\"card\" style={{ height: 9 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>City Map</p>\n                        <CityMap onSelectRegion={(selectedRegion) => this.handleSelectRegion(selectedRegion)}></CityMap>\n                    </div>\n                </div>\n                <div key=\"b\">\n                    <div class=\"card\" style={{ height: 9 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Radar Chart</p>\n                        {/* <RadarChart></RadarChart> */}\n                        <div class=\"row\" style={{ marginLeft: 30, marginTop: 10 }}>\n                            <div class=\"col-8\">\n                                <RadarChart\n                                    captions={{\n                                        // columns\n                                        buildings: 'buildings',\n                                        medical: 'medical',\n                                        sewer_and_water: 'sewer and water',\n                                        roads_and_bridges: 'roads and bridges',\n                                        power: 'power'\n                                    }}\n                                    data={[\n                                        {\n                                            data: {\n                                                buildings: 0.4,\n                                                medical: 0.7,\n                                                sewer_and_water: 0.4,\n                                                roads_and_bridges: 0.8,\n                                                power: 0.5\n                                            },\n                                            meta: { color: '#fc9272' }\n                                        },\n                                    ]}\n                                    size={360}\n                                    options={{\n                                        captionProps: () => ({\n                                            className: 'caption',\n                                            textAnchor: 'middle',\n                                            fontSize: 15,\n                                            fontFamily: 'sans-serif'\n                                        }),\n                                    }}\n                                />\n                            </div>\n                            <div class=\"col-4\">\n                                <h3>{this.state.selectedRegion[1]}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div key=\"c\">\n                    <div class=\"card\" style={{ height: 10 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Line Chart</p>\n                        <LineChart></LineChart>\n                    </div>\n                </div>\n                {/* <div key=\"d\">\n                    <div class=\"card\" style={{ height: 5 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Shaking Intensity</p>\n                    </div>\n                </div> */}\n                <div key=\"e\">\n                    <div class=\"card\" style={{ height: 27 * rowHeight }}>\n                        <p style={{ backgroundColor: \"#e9ecef\", margin: \"5px\", paddingLeft: \"5px\" }}>Heatmap</p>\n                        <HeatMap></HeatMap>\n                    </div>\n                </div>\n            </GridLayout>\n        </div>);\n    }\n}\n\nexport default DashBoard;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DashBoard from \"./components/DashBoard\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DashBoard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}